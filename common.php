<?php

error_reporting(E_ALL);

# common routines to DWiki

require("config.php");

$QUERY_STRING = getenv("QUERY_STRING");

PAGES_DIRECTORY;
if($QUERY_STRING != "")
    $pageName = urldecode($QUERY_STRING);
else
    $pageName = MAIN_PAGE_NAME;

$pageID = urlencode($pageName);
$lastModified = pageModified($pageName);

$sAppendBody = "";

function getPagePath($pageName) {
    if(strpos(" " . $pageName,"/"))
    {
        return PAGES_DIRECTORY . "/bad_page_name.html";
    }
    return PAGES_DIRECTORY . "/" . urlencode($pageName) . ".html";

}

# returns page from given directory (db), with given name (pageName)
# and with replacing (replaceMap)
# if no page exists, empty page is returned
function loadPage($pageName, $replaceMap)
{
    $sPath = getPagePath($pageName);
    $f = @fopen($sPath, "rt");
    if($f)
    {
        $s = fread($f, filesize($sPath)+1);
        fclose($f);

        while(list($from,$to) = each($replaceMap))
            $s = str_replace($from, $to, $s);

        return $s;
    }
    else
    {
        return "";
    }
}

# Returns autogenerated fileName
function tempFile($fileBody) {
    $path = tempnam("/tmp", "cms");
    $f = fopen($path, "wt");
    fwrite($f, $fileBody);
    fclose($f);
    return $path;
}

# Saves page in given directory (db), under given name (pageName)
# with body = sText
function savePage($pageName, $newPageBody, $originalPageBody)
{
    $newPageBody = str_replace("\r", "", $newPageBody);
    $originalPageBody = str_replace("\r", "", $originalPageBody);

    $sFile = getPagePath($pageName);

    if (trim($newPageBody) == "") {
        unlink($sFile);
        return;
    }

    if (USE_MERGE) {
        $newBodyPath = tempFile($newPageBody);
        $originalBodyPath = tempFile($originalPageBody);
        // Clen up CRLF into LF to allow proper merge
        if (file_exists($sFile)) {
            $tmpFilePath = tempFile(str_replace("\r", "", file_get_contents($sFile)));
        }
        else {
            $tmpFilePath = tempFile("");
        }

        system("set -x; merge " . $tmpFilePath . " "
            . $originalBodyPath . " " . $newBodyPath,
            &$result);
        if ($result > 0) {

            # replace conflict markers
            $f = fopen($tmpFilePath, "rt");
            $s = fread($f, filesize($tmpFilePath)+1);
            fclose($f);

            $s = ereg_replace("<<<<<<<[^\n]*", '<blink style="color: red">CONFLICT</blink>', $s);
            $s = ereg_replace(">>>>>>>[^\n]*", '<blink style="color: red">END</blink>', $s);

            $f = fopen($sFile, "wt");
            fwrite($f, $s);
        }
        else {
            copy($tmpFilePath, $sFile);
        }

        unlink($originalBodyPath);
        unlink($newBodyPath);
        unlink($tmpFilePath);
    }
    else {
        # just overwrite file, last writer wins
        if($newPageBody != "")
        {
            $f = fopen($sFile, "wt");
            fwrite($f, $newPageBody);
            fclose($f);
        }
        else
        {
            @unlink($sFile);
        }
    }
}

# Appends page in given directory (db), under given name (pageName)
# with body = sText
function appendPage($pageName, $newPageBody)
{
    $newPageBody = trim($newPageBody);
    $sFile = getPagePath($pageName);
    if($newPageBody != "")
    {
        $f = fopen($sFile, "at");
        fwrite($f, "\n\n\n\n");
        fwrite($f, $newPageBody);
        fclose($f);
    }
    else
    {
        @unlink($sFile);
    }
}

function pageExists($pageName)
{
    $sFile = getPagePath($pageName);
    return file_exists($sFile);
}

function pageModified($pageName)
{
    $sFile = getPagePath($pageName);
    if (file_exists($sFile)) {
        $stat = stat($sFile);
        $lastModified = strftime(MODIFIED_FORMAT ,$stat[10]);
        return $lastModified;
    }
    else {
        return "";
    }
}

function getWikiPage($pageNameName)
{
    $lines = loadPage($pageNameName, array());

    if($lines)
    {
        $arr = explode("[[", $lines);
        $sBuf = $arr[0];
        for($i=1; $i<count($arr); $i++)
        {
            $sPart = $arr[$i];
            $rBracket = strpos($sPart, "]]");
            $href = substr($sPart,0,$rBracket);
            $hrefUrl = urlencode($href);
            $rest = substr($sPart,$rBracket+2);

            if(strpos($href,":")>0)
                $sBuf .= "<A HREF=\"$href\">$href</A>";

            elseif(pageExists($href))
                $sBuf .= "<A HREF=\"view.php?$hrefUrl\"><span>$href</span></A>";

            else
                $sBuf .= "<A HREF=\"edit.php?$hrefUrl\"><FONT COLOR=RED>$href</FONT></A>";

            $sBuf .= $rest;
        }

        return $sBuf;
    }
}

function render($pageNameName) {
    echo getWikiPage($pageNameName);
}
?>
